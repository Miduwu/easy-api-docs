"use strict";(self.webpackChunkbdjs=self.webpackChunkbdjs||[]).push([[6320],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={},i="Tips",l={unversionedId:"old/tips",id:"old/tips",title:"Tips",description:"Useful tips to improve your coding experience.",source:"@site/docs/old/tips.md",sourceDirName:"old",slug:"/old/tips",permalink:"/docs/old/tips",draft:!1,editUrl:"https://github.com/Miduwu/easy-api-docs/tree/new/docs/old/tips.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Escapers",permalink:"/docs/old/escapers"},next:{title:"Tips",permalink:"/docs/category/tips"}},s={},p=[{value:"Handler",id:"handler",level:2},{value:"Using database",id:"using-database",level:2},{value:"Adding your own function",id:"adding-your-own-function",level:2},{value:"Using callbacks",id:"using-callbacks",level:2},{value:"Reverse reading",id:"reverse-reading",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tips"},"Tips"),(0,a.kt)("p",null,"Useful tips to improve your coding experience."),(0,a.kt)("h2",{id:"handler"},"Handler"),(0,a.kt)("p",null,"Load the routes with a handler."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example (Setup):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { API } from \"easy-api.ts\";\n\nconst api = new API({...})\n\napi.routes.load('./routes').then(() => {\n    api.connect() // We're starting the API when the source is ready.\n})\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example (route):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// path: './routes/../../../route.js'\nmodule.exports = {\n    path: '/endpoint/name',\n    details: {\n        description: 'Anything',\n        more_X_keys: 'anything'\n    },\n    code: `\n    $send[200;json;{\n        success: true\n    }]\n    `\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"using-database"},"Using database"),(0,a.kt)("p",null,"Save, get and delete variables from the database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example (Setup):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { API } from \"easy-api.ts\";\n\nconst api = new API({\n    port: process.env.PORT || 3000,\n    database: {\n        enabled: true, // VERY IMPORTANT TO ENABLE IT!!\n        type: 'replit', // You can use: 'replit' | 'mongo' | 'quickdb' | 'default'\n        // mongoUrl: '...'\n    }\n})\n\napi.connect()\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Functions:")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$deleteVar[var name]")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$getVar[var name]")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$setVar[var name;value]")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"adding-your-own-function"},"Adding your own function"),(0,a.kt)("p",null,"Add your own function using the ",(0,a.kt)("inlineCode",{parentName:"p"},"<API>.interpreter")," class."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { API, FunctionBuilder, Utils } from \"easy-api.ts\";\n\nconst api = new API({...})\n\napi.interpreter.addFunction({\n    data: new FunctionBuilder()\n    .setName('test'),\n    code: async d => {\n        await d.func.resolve_fields(d) // required to load overloads\n        if(!d.func.inside) return Utils.Warn('Invalid inside provided in:', d.func)\n        return {\n            code: d.code.replace(d.func.id, `${d.func.inside} its the inside!`)\n        }\n    }\n})\n\napi.connect()\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"using-callbacks"},"Using callbacks"),(0,a.kt)("p",null,"The callbacks are callable functions using the EA.TS interpreter, (custom functions)"),(0,a.kt)("p",null,"?> Access to the parameters using: ",(0,a.kt)("inlineCode",{parentName:"p"},"%PARAM_index%")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$createCallback[throwError;\n    $send[%PARAM_1%;json;\n        { "status": %PARAM_1%, "error": "%PARAM_2%" }\n    ]\n    $break\n]\n\n$if[$getQuery[hi]==undefined;$callback[throwError;400;Missing parameter: \'hi\']]\n\n$send[200;json;{}]\n')),(0,a.kt)("h2",{id:"reverse-reading"},"Reverse reading"),(0,a.kt)("p",null,"Now ea.ts reads from top to bottom, but also can read from bottom to top, to switch between read modes, use the constructor options object."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { API, FunctionBuilder, Utils } from \"easy-api.ts\";\n\nconst api = new API({\n    port: process.env['port'],\n    spaces: 2,\n    reverseReading: true\n});\n")))}d.isMDXComponent=!0}}]);