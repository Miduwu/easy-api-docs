"use strict";(self.webpackChunkbdjs=self.webpackChunkbdjs||[]).push([[2125],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="easy-api.ts",s={unversionedId:"home",id:"home",title:"easy-api.ts",description:"A powerful library to create your own API with ease.",source:"@site/docs/home.md",sourceDirName:".",slug:"/home",permalink:"/docs/home",draft:!1,editUrl:"https://github.com/Miduwu/easy-api-docs/tree/new/docs/home.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Functions",permalink:"/docs/category/functions"}},l={},c=[{value:"Install",id:"install",level:2},{value:"Features",id:"features",level:2},{value:"Easy setup",id:"easy-setup",level:2},{value:"You need to know...",id:"you-need-to-know",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"easy-apits"},"easy-api.ts"),(0,o.kt)("p",null,"A powerful library to create your own API with ease."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://camo.githubusercontent.com/1b637c74e2bcd2feb02d7a3ca3d61263bed5d673dfd472ee663157db1d2000f6/68747470733a2f2f692e696d6775722e636f6d2f326b735a5342792e6a7067",alt:"image",title:":size=750"})),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm i easy-api.ts\n")),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\ud83d\ude80 Optimized and advanced codes and functions."),(0,o.kt)("li",{parentName:"ul"},"\ud83d\udcdd Easy to learn."),(0,o.kt)("li",{parentName:"ul"},"\ud83d\udcda Constant updates."),(0,o.kt)("li",{parentName:"ul"},"\ud83d\udd25 Image manipulation.")),(0,o.kt)("h2",{id:"easy-setup"},"Easy setup"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { API } = require("easy-api.ts"); // Use: import { API } from \'easy-api.ts\'; for TypeScript.\n\nconst api = new API({\n    reverse: false\n});\n\napi.route({\n    url: \'/color\',\n    method: "GET",\n    code: `\n    $ignore:[Check docs to see how does functions work ;)]\n    $if:[$or:[$query:[hex]==null;$isValidHex:[$query:[hex]]==false];\n        $reply:[\n            $setCode:[400]\n            $setType:[json]\n            $setBody:[{\n                "error": "Invalid hex color code provided"\n            }]\n        ]\n        $break $ignore:[IMPORTANT!!]\n    ]\n\n    $createCanvas:[\n        $setDimentions:[512;512]\n        $color:[$query:[hex]]\n        $drawRect:[0;0;512;512]\n    ]\n    $reply: [\n        $setCode:[200]\n        $setType:[canvas]\n        $setBody:[$default]\n    ]\n    `\n    `\n})\n\n// Lets load the handler...\napi.load(\'./routes\').then(() => {\n    console.log(\'Source loaded.\')\n    api.connect({ port: process.env["PORT"] || 3000 }) // We\'re connecting to the API when the source is loaded.\n})\n')),(0,o.kt)("h2",{id:"you-need-to-know"},"You need to know..."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You need node ",(0,o.kt)("strong",{parentName:"li"},">=14")),(0,o.kt)("li",{parentName:"ul"},"This is a fastify framework."),(0,o.kt)("li",{parentName:"ul"},"This can contain some bugs (report it)."),(0,o.kt)("li",{parentName:"ul"},"We'd like you to join our support server.")))}d.isMDXComponent=!0}}]);